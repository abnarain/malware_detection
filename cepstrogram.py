# author : Abhinav Narain
# computes spectral, cepstral and time features
# date : 27 May, 2016

import scipy ,sys, getopt, math
from scipy.fftpack import fft, fftfreq, fftshift
from scipy import signal,arange
from scipy.signal import butter, lfilter, freqz
from configs import *
from cepstrum import complex_cepstrum
import numpy as np

def filereader(filename,fs): 
    z= scipy.fromfile(open(filename), dtype=scipy.complex64)
    print "length of total z= ", len(z)
    # dtype with scipy.int16, scipy.int32, scipy.float32, scipy.complex64 or whatever type you were using.
    mag, phase,x,y = [], [], [], []
    start_sec=0.001
    end_sec=0.1
    z_needed = z[start_sec*fs: end_sec*fs]
    #z_needed = z[600+start_sec*fs: 600+end_sec*fs]
    z=z_needed
    
    len_z = int(len(z))
    print "length of needed z= ", len(z)
    #len_z = int(20.0/6*len(z))
    #len_z = int(400.0/6000*len(z))
    for i in range(0, len_z):
        mag.append(np.absolute(z[i]))
        x.append(z[i].real)
        y.append(z[i].imag)
        phase.append(np.angle(z[i]))
    return [x,y,mag, phase,z]


def main(argv):
    inputfile=''
    noisefile,outputfile='',''
    noiseflag,inputflag=0,0
    try:
        opts, args = getopt.getopt(argv,"h:i:n:o:",["ifile=","nfile=","ofile"])
    except getopt.GetoptError:
        print 'file.py -i <inputfile> -n <noisefile> -o <outputfile> '
        sys.exit(2)
    for opt, arg in opts:
        print opt ,arg,
        if opt == '-h':
            print 'file.py -i <inputfile> -n <noisefile> -o <outputfile>'
            sys.exit()
        elif opt in ("-i", "--ifile"):
            inputfile = arg
            inputflag=1
        elif opt in ("-n", "--nfile"):
            noisefile = arg
            noiseflag=1
        elif opt in ("-o", "--ofile"):
            outputfile = arg
        else:
            print "check help for usage" 
            sys.exit()





































































if __name__=='__main__':
    main(sys.argv[1:])
